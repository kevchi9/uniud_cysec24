CREATE TABLE users (
username varchar(20) NOT NULL PRIMARY KEY,
pswd varchar(255) NOT NULL,
);


CREATE TABLE pkey (
user varchar(20) NOT NULL,
pkey varchar(683) PRIMARY KEY,
CONSTRAINT foreign_pkey_key FOREIGN KEY (user) REFERENCES users(username) ON DELETE CASCADE
);


CREATE TABLE files (
file_id varchar(30) NOT NULL,
file_path varchar(100) NOT NULL,
CONSTRAINT files_primary_key PRIMARY KEY (file_path)
);


CREATE TABLE own_file (
username varchar(20) NOT NULL,
file varchar(100) NOT NULL, 
CONSTRAINT own_file_primary_key PRIMARY KEY (username, file),
CONSTRAINT foreign_user_key FOREIGN KEY (username) REFERENCES users(username) ON DELETE CASCADE,
CONSTRAINT foreign_file_key FOREIGN KEY (file) REFERENCES files(file_path) ON DELETE CASCADE
);


CREATE or REPLACE FUNCTION verify(user_name varchar(20), pswd varchar(255))
RETURNS int 
as
$$
DECLARE
verified int;
BEGIN
select 1 into verified from users where username=user and pswd=crypt(pswd,password);
return coalesce(verified, 0);
END;
$$
language plpgsql;



CREATE or REPLACE FUNCTION does_exists(user_name varchar(20))
RETURNS int
language plpgsql
as 
$$
DECLARE
exists int;
BEGIN
SELECT 1 into exists FROM users WHERE username=user_name;
return coalesce(exists, 0);
END;
$$;


